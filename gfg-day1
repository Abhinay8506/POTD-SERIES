class Solution{
  public:
    vector <int> verticalSum(Node *root) {
        // add code here.
        map<int,map<int,vector<int>>>nodes;
        queue<pair<Node*,pair<int,int>>>q;
        vector<int>ans;
        if(root==NULL){
            return ans;
        }
        q.push(make_pair(root,make_pair(0,0)));
        while(!q.empty())
        {
            pair<Node*,pair<int,int>>temp=q.front();
            q.pop();
            Node* node=temp.first;
            int hd=temp.second.first;
            int lv=temp.second.second;
            nodes[hd][lv].push_back(node->data);
            if(node->left)
            {
                q.push(make_pair(node->left,make_pair(hd-1,lv+1)));
            }
            
            if(node->right){
                q.push(make_pair(node->right,make_pair(hd+1,lv+1)));
            }
        }
        
        for(auto i:nodes){
            int sum=0;
            for(auto j:i.second){
               
                for(auto k:j.second){
                     sum+=k;
                }
                
            }
            ans.push_back(sum);
        }
        return ans;

    }
};
