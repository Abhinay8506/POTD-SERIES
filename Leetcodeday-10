class Solution {
public:
    int dx[4]={-1,0,1,0};
    int dy[4]={0,1,0,-1};
    int visit(vector<vector<int>>& grid,int i,int j,int m,int n){
        if(i<0 || j<0 || i>=m || j>=n || grid[i][j]==0){
            return 0;
        }
        int temp=0;
        int nx,ny;
        int curr=grid[i][j];
        grid[i][j]=0;
        for(int d=0;d<4;d++){
            nx=i+dx[d];
            ny=j+dy[d];
            temp=max(temp,curr+visit(grid,nx,ny,m,n));
        }
        grid[i][j]=curr;
        return temp;
    }
    int getMaximumGold(vector<vector<int>>& grid) {
        int m=grid.size();
        int n=grid[0].size();
        int maxi=0;
        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++){
                if(grid[i][j]!=0){
                    maxi=max(maxi,visit(grid,i,j,m,n));
                }
            }
        }
        return maxi;
    }
};
