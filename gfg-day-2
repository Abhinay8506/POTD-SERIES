void solve(Node* node,vector<int>&ans)
{
    if(node==NULL){
        return;
    }
    bool leftcheck=node->left!=NULL?true:false;
    bool rightcheck=node->right!=NULL?true:false;
    
    if(leftcheck==true && rightcheck==false){
        solve(node->left,ans);
        ans.push_back(node->left->data);
        
    }
    if(leftcheck==false && rightcheck==true){
        solve(node->right,ans);
        ans.push_back(node->right->data);
        
    }
    if(leftcheck==true && rightcheck==true)
    {
        solve(node->left,ans);
        solve(node->right,ans);
    }
    
}
vector<int> noSibling(Node* node)
{
    // code here
    vector<int>ans;
    solve(node,ans);
    if(ans.size()==0){
        ans.push_back(-1);
    }
    sort(ans.begin(),ans.end());
    return ans;
}
